// Generated by CoffeeScript 1.4.0
var Texy, Texy_Html, utils, _;

_ = require('underscore');

utils = require('../utils');

Texy = require('../texy');

module.exports = Texy_Html = (function() {

  Texy_Html.xhtml = false;

  Texy_Html.emptyElements = ['img', 'hr', 'br', 'input', 'meta', 'area', 'base', 'col', 'link', 'param', 'basefont', 'frame', 'isindex', 'wbr', 'embed'];

  Texy_Html.prohibits = {
    'a': ['a', 'button'],
    'img': ['pre'],
    'object': ['pre'],
    'big': ['pre'],
    'small': ['pre'],
    'sub': ['pre'],
    'sup': ['pre'],
    'input': ['button'],
    'select': ['button'],
    'textarea': ['button'],
    'label': ['button', 'label'],
    'button': ['button'],
    'form': ['button', 'form'],
    'fieldset': ['button'],
    'iframe': ['button'],
    'isindex': ['button']
  };

  Texy_Html.optionalEnds = ['body', 'head', 'html', 'colgroup', 'dd', 'dt', 'li', 'option', 'p', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr'];

  Texy_Html.inlineElements = {
    'ins': false,
    'del': false,
    'tt': false,
    'i': false,
    'b': false,
    'big': false,
    'small': false,
    'em': false,
    'strong': false,
    'dfn': false,
    'code': false,
    'samp': false,
    'kbd': false,
    'var': false,
    'cite': false,
    'abbr': false,
    'acronym': false,
    'sub': false,
    'sup': false,
    'q': false,
    'span': false,
    'bdo': false,
    'a': false,
    'object': true,
    'img': true,
    'br': true,
    'script': true,
    'map': false,
    'input': true,
    'select': true,
    'textarea': true,
    'label': false,
    'button': true,
    'u': false,
    's': false,
    'strike': false,
    'font': false,
    'applet': true,
    'basefont': false,
    'embed': true,
    'wbr': false,
    'nobr': false,
    'canvas': true
  };

  function Texy_Html() {
    this._children = [];
    this.attrs = {};
  }

  Texy_Html.el = function(name, attrs) {
    var _el;
    if (attrs == null) {
      attrs = {};
    }
    _el = new Texy_Html();
    _el.setName(name);
    if (typeof attrs === 'string') {
      _el.setText(attrs);
    }
    if (typeof attrs === 'object') {
      _el.setAttrs(attrs);
    }
    return _el;
  };

  Texy_Html.prototype.setName = function(name, empty) {
    if (empty == null) {
      empty = null;
    }
    if (name !== null && typeof name !== 'string') {
      throw new Error('Name must be string or null');
    }
    this.name = name;
    this._isEmpty = empty === null ? _.contains(Texy_Html.emptyElements, name) : empty;
    return this;
  };

  Texy_Html.prototype.getName = function() {
    return this.name;
  };

  Texy_Html.prototype.isEmpty = function() {
    return this._isEmpty;
  };

  Texy_Html.prototype.setHref = function(path, query) {
    if (query == null) {
      query = null;
    }
    if (query) {
      query = utils.buildQuery(query, null, '&');
      if (query !== '') {
        path = "" + path + "?" + query;
      }
    }
    this.attrs['href'] = path;
    return this;
  };

  Texy_Html.prototype.insert = function(index, child, replace) {
    if (replace == null) {
      replace = false;
    }
    if (child instanceof Texy_Html || typeof child === 'string') {
      if (index === null) {
        this._children.push(child);
      } else {
        this._children.splice(index, (replace ? 1 : 0), child);
      }
    } else {
      throw new Error('Child node must be scalar or TexyHtml object');
    }
    return this;
  };

  Texy_Html.prototype.add = function(child) {
    return this.insert(null, child);
  };

  Texy_Html.prototype.create = function(name, attrs) {
    var child;
    if (attrs == null) {
      attrs = [];
    }
    child = Texy_Html.el(name, attrs);
    this.add(child);
    return child;
  };

  Texy_Html.prototype.getChildren = function() {
    return this._children;
  };

  Texy_Html.prototype.removeChildren = function() {
    return this._children = [];
  };

  Texy_Html.prototype.setAttrs = function(attrs) {
    this.attrs = attrs;
    return this;
  };

  Texy_Html.prototype.setText = function(text) {
    if (/boolean|number|string/.test(typeof text)) {
      this._children = [text];
    } else {
      throw new Error('Text Have to be scalar');
    }
    return this;
  };

  Texy_Html.prototype.getText = function() {
    var item, result, _i, _len, _ref;
    result = '';
    _ref = this._children;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      if (typeof item === 'object') {
        return false;
      }
      result += item;
    }
    return result;
  };

  Texy_Html.prototype.endTag = function() {
    if (this.name && !this.isEmpty()) {
      return "</" + this.name + ">";
    }
    return "";
  };

  Texy_Html.prototype.startTag = function() {
    var item, items, k, key, result, v, value, _ref;
    if (this.name === null) {
      return '';
    }
    result = "<" + this.name;
    _ref = this.attrs;
    for (key in _ref) {
      value = _ref[key];
      if (value === false || value === null) {
        continue;
      }
      if (value === true) {
        result += Texy_Html.xhtml ? " " + key + "=\"" + key + "\"" : " " + key;
        continue;
      } else if (_.isArray(value) || _.isObject(value)) {
        if (_.isArray(value)) {
          items = (function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = value.length; _i < _len; _i++) {
              item = value[_i];
              if (item !== null) {
                _results.push(item);
              }
            }
            return _results;
          })();
        }
        if (_.isObject(value) && !_.isArray(value)) {
          items = (function() {
            var _results;
            _results = [];
            for (k in value) {
              v = value[k];
              if (v !== null) {
                _results.push("" + k + ": " + v);
              }
            }
            return _results;
          })();
        }
        items = key === 'style' ? items.join(';') : items.join(' ');
        result += " " + key + "=\"" + items + "\"";
        continue;
      }
      result += " " + key + "=\"" + value + "\"";
    }
    return result + (Texy_Html.xhtml && this.isEmpty() ? " />" : ">");
  };

  Texy_Html.prototype.setAttr = function(name, value) {
    this.attrs[name] = value;
    return this;
  };

  Texy_Html.prototype.getAttrs = function() {
    return this.attrs;
  };

  Texy_Html.prototype.addAttr = function(name, value) {
    var _base;
    (_base = this.attrs)[name] || (_base[name] = []);
    if (!_.isArray(this.attrs[name])) {
      this.attrs[name] = [this.attrs[name]];
    }
    return this.attrs[name].push(value);
  };

  Texy_Html.prototype.getContentType = function() {
    if (_.isUndefined(Texy_Html.inlineElements[this.name])) {
      return Texy.CONTENT_BLOCK;
    }
    if (Texy_Html.inlineElements[this.name]) {
      return Texy.CONTENT_REPLACED;
    } else {
      return Texy.CONTENT_MARKUP;
    }
  };

  return Texy_Html;

})();
